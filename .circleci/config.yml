version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers-legacy
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:8.0.18
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: root
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: myapp_test

    working_directory: ~/myapp

    dependencies:
      pre:
        - sudo pip install awscli

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            - v2-dependencies- 
      - run:
          name: Install Bundle
          command: |
            gem install bundler -v 1.17.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Run Rubocop
          command: bundle exec rubocop

      - run: mv config/database.yml config/database.yml.org
      - run: mv config/database.yml.ci config/database.yml

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run: gem install bundler

      - run:
          name: Run Rspec
          command: bundle exec rspec

      - run: mv config/database.yml.org config/database.yml

      - run: sudo apt update && sudo apt install -y python-dev python-pip
      - run: sudo pip install awscli --ignore-installed six

      - run:
          name: "authorize-security-group-ingress"
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 authorize-security-group-ingress --group-id sg-02788aaefad3140ce --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh

      - add_ssh_keys:
          fingerprints:
            - "8a:ee:86:b9:e8:01:f1:e7:31:34:93:1b:ee:a9:42:02"

      - deploy:
          name: Capistrano deploy
          command: sh script/deploy.sh

      - run:
          name: "revoke-security-group-ingress"
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 revoke-security-group-ingress --group-id sg-02788aaefad3140ce --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh