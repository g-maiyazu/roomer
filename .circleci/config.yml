version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers-legacy
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:8.0.18
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: root
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: myapp_test

    working_directory: ~/myapp

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            - v2-dependencies- 
      - run:
          name: Install Bundle
          command: |
            gem install bundler -v 1.17.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Run Rubocop
          command: bundle exec rubocop

      - run: mv config/database.yml.ci config/database.yml

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run: gem install bundler

      - run:
          name: Run Rspec
          command: bundle exec rspec

  deploy:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws
          command: |
            sudo pip install awscli
            aws --version
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Install jq
          command: sudo apt-get install -y jq
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: "Build & Push Docker Image"
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/roomer-ecr:$CIRCLE_SHA1 . 
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/roomer-ecr:$CIRCLE_SHA1
      - run:
          name: "DB Migrate"
          command: |
            aws ecs run-task \
              --region ap-northeast-1 \
              --cluster roomer-cluster \
              --task-definition roomer-task \
              --overrides file://ecs/run_task_db_migrate.json
      - run:
          name: "Update Task"
          command: |
              aws ecs register-task-definition --family portfolio-task --cli-input-json --region ap-northeast-1 "$(aws ecs describe-task-definition --task-definition portfolio-task --region ap-northeast-1 | sed -e "s#$AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/portforio-web:.*\",#$AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/portforio-web:$CIRCLE_SHA1\",#g" | jq '.taskDefinition | { containerDefinitions: .containerDefinitions }')"
      - run:
          name: "Update Service"
          command: |
              aws ecs update-service --cluster p-claster --service p-service --task-definition portfolio-task --region ap-northeast-1

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
